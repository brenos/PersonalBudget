// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonalBudget.Models;

namespace PersonalBudget.Migrations
{
    [DbContext(typeof(PersonalBudgetContext))]
    partial class PersonalBudgetContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PersonalBudget.Models.Categorie", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("userId")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("id_UNIQUE");

                    b.HasIndex("UserId")
                        .HasName("userId_index");

                    b.ToTable("categorie");
                });

            modelBuilder.Entity("PersonalBudget.Models.Release", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MonthRef")
                        .HasColumnName("monthRef")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnName("transactionId")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("YearRef")
                        .HasColumnName("yearRef")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("ID_UNIQUE");

                    b.HasIndex("TransactionId")
                        .HasName("fk_release_transaction_idx");

                    b.HasIndex("MonthRef", "YearRef")
                        .HasName("fields_index");

                    b.ToTable("release");
                });

            modelBuilder.Entity("PersonalBudget.Models.Transaction", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Amount")
                        .HasColumnName("amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategorieId")
                        .IsRequired()
                        .HasColumnName("categorieId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime>("DtTransaction")
                        .HasColumnName("dtTransaction")
                        .HasColumnType("datetime");

                    b.Property<int>("MonthRef")
                        .HasColumnName("monthRef")
                        .HasColumnType("int");

                    b.Property<string>("TypeId")
                        .IsRequired()
                        .HasColumnName("typeId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnName("userId")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("YearRef")
                        .HasColumnName("yearRef")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategorieId")
                        .HasName("fk_transaction_categorie_idx");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("ID_UNIQUE");

                    b.HasIndex("TypeId")
                        .HasName("fk_transaction_type_idx");

                    b.HasIndex("MonthRef", "YearRef", "UserId")
                        .HasName("fields_index");

                    b.ToTable("transaction");
                });

            modelBuilder.Entity("PersonalBudget.Models.TransactionType", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("name")
                        .HasColumnType("varchar(45)");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique()
                        .HasName("id_UNIQUE");

                    b.ToTable("transactionType");
                });

            modelBuilder.Entity("PersonalBudget.Models.Release", b =>
                {
                    b.HasOne("PersonalBudget.Models.Transaction", "Transaction")
                        .WithMany("Releases")
                        .HasForeignKey("TransactionId")
                        .HasConstraintName("fk_release_transaction")
                        .IsRequired();
                });

            modelBuilder.Entity("PersonalBudget.Models.Transaction", b =>
                {
                    b.HasOne("PersonalBudget.Models.Categorie", "Categorie")
                        .WithMany("Transactions")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("fk_transaction_categorie")
                        .IsRequired();

                    b.HasOne("PersonalBudget.Models.TransactionType", "TransactionType")
                        .WithMany("Transactions")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("fk_transaction_type")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
